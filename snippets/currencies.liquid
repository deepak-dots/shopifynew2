  {{ "//cdn.shopify.com/s/javascripts/currencies.js" | script_tag }}
  <!--[if (gt IE 9)|!(IE)]><!--><script src="{{ 'jquery.currencies.min.js' | asset_url }}" defer="defer"></script><!--<![endif]-->
  <!--[if lte IE 9]><script src="{{ 'jquery.currencies.min.js' | asset_url }}"></script><![endif]-->
  <script type="text/javascript">
    window.addEventListener('DOMContentLoaded', function() {
      (function($) {
        $(document).ready(function() {
          function currencySwitch () {
            Currency.format = '{{ settings.currency_format | default: 'money_with_currency_format' }}';
            var shopCurrency = '{{ shop.currency }}';
            /* Sometimes merchants change their shop currency, let's tell our JavaScript file */
            Currency.moneyFormats[shopCurrency].money_with_currency_format = {{ shop.money_with_currency_format | strip_html | json }};
            Currency.moneyFormats[shopCurrency].money_format = {{ shop.money_format | strip_html | json }};

            /* Default currency */
            var defaultCurrency = '{{ settings.default_currency | default: shop.currency }}';

            /* Cookie currency */
            var cookieCurrency = Currency.cookie.read();

            var sm = document.querySelectorAll('.min-product-price span.money').length;
            if (sm < 1) {
              sm = document.querySelectorAll('.min-product-price');
              sm && $.each(sm, function(e, a) {
                var x = a.innerHTML;
                 a.innerHTML = theme.Currency.formatMoney(x, theme.moneyFormat);
              });
             }


            /* Fix for customer account pages */
            jQuery('span.money span.money').each(function() {
              jQuery(this).parents('span.money').removeClass('money');
            });


            /* Saving the current price */
            jQuery('span.money').each(function() {
              jQuery(this).attr('data-currency-{{ shop.currency }}', jQuery(this).html());
            });


            //console.log(cookieCurrency);
            // If there's no cookie.
            if (cookieCurrency == null) {
              if (shopCurrency !== defaultCurrency) {
                Currency.convertAll(shopCurrency, defaultCurrency);
              }
              else {
                Currency.currentCurrency = defaultCurrency;
              }
            }
            // If the cookie value does not correspond to any value in the currency dropdown.
            else if (document.querySelector('[name=currencies]') && document.querySelector('[name=currencies] option[value=' + cookieCurrency + ']') == null) {
              Currency.currentCurrency = shopCurrency;
              Currency.cookie.write(shopCurrency);
            }
            else if (cookieCurrency === shopCurrency) {
              Currency.currentCurrency = shopCurrency;
            }
            else {
              Currency.convertAll(shopCurrency, cookieCurrency);
            }
            jQuery('.currency-picker__wrapper .select-toggle').text(Currency.currentCurrency);
            jQuery('[name=currencies]').val(Currency.currentCurrency).change(function() {
              var newCurrency = jQuery(this).val();
              Currency.convertAll(Currency.currentCurrency, newCurrency);
              jQuery('.selected-currency').text(Currency.currentCurrency);
              //window.location.reload();

            });

            var original_selectCallback = window.selectCallback;

            var selectCallback = function(variant, selector) {
              original_selectCallback(variant, selector);
              console.log(variant);
              Currency.convertAll(shopCurrency, jQuery('[name=currencies]').val());
              jQuery('.selected-currency').text(Currency.currentCurrency);
            };

            $('body').on('ajaxCart.afterCartLoad', function(cart) {
              Currency.convertAll(shopCurrency, jQuery('[name=currencies]').val());
              jQuery('.selected-currency').text(Currency.currentCurrency);
            });

            jQuery('.selected-currency').text(Currency.currentCurrency);
            if (Currency.currentCurrency) {
              var prettyli = document.querySelectorAll('#prettydropdown-currencies li');
              prettyli && $.each(prettyli, function(e, a) {
                var x = a.getAttribute('data-value');
                if(x == Currency.currentCurrency) {
                  a.classList.add('selected');
                } else {
                  a.classList.remove('selected')
                }
              });
            }
          }
          currencySwitch();
          //
          // var cartJSON = JSON.parse(document.getElementById('cartJSON').innerHTML)
          // CartJS.init(cartJSON, {
          //   'debug': false,
          //   'dataAPI': true,
          //   'requestBodyClass': 'cart-loading',
          //   'moneyFormat': '{{ shop.money_format}}',
          //   'moneyWithCurrencyFormat': '{{ shop.money_with_currency_format }}'
          // });
          //
          //
          $(document).on('cart.requestComplete', function(event, cart) {
            if(cart.item_count == 0) {
              $('.item-count').html('');
            }
            else {
              $('.item-count').html(cart.item_count);
              currencySwitch();
            }
          });
          //
          // $(document).on('click', '.cart', function(){
          //   $(".cart-popup").addClass('active');
          //   $('.recently-added').show();
          //   currencySwitch();
          // });
          //
          // $(document).on('variantChange', function (){
          //   //setTimeout(function(){
          //     currencySwitch();
          //    //}, 50);
          // });
          //
          //
          // setTimeout(function(){
          //   var sm = document.querySelectorAll('.min-product-price span.money').length;
          //   if (sm < 1) {
          //     sm = document.querySelectorAll('.min-product-price');
          //     sm && $.each(sm, function(e, a) {
          //       var x = a.innerHTML;
          //        a.innerHTML = theme.Currency.formatMoney(x, theme.moneyFormat);
          //     });
          //    }
          //    currencySwitch();
          // }, 100);

        });
      })(jQuery);
    });

  </script>
